<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Life Story</title>
    <link>https://ianjustin39.github.io/ianlife/</link>
    <description>Recent content on Life Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 11 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ianjustin39.github.io/ianlife/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>銀行付款系統 - 開閉原則 | Open/Closed Principle</title>
      <link>https://ianjustin39.github.io/ianlife/design-pattern/open-closed-principle/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/design-pattern/open-closed-principle/</guid>
      <description>本系列文章同步分享於IT邦幫忙第12屆鐵人賽
   Design Pattern 系列文章導讀    Design Pattern可以說是開發上大家都會遇到的一個課題， 這系列文會從Design Principles、各種design pattern到最後的Anti-Patterns &amp; Code Smells介紹下去，讓我們可以更了解各種pattern的使用時機與場合。 預計目標主題如下，若有哪部分不熟的章節可以直接點進去看 註：可以利用Online Java Compiler IDE來跑範例程式碼。      新手村  什麼是Design Pattern? Design Pattern的類型與原則    Design Principles  我的購物車 - 單一職責原則 | Single Responsibility Principle 支付系統 - 開閉原則 | Open/Closed Principle 里氏替換原則 - Liskov Substitution Principle 介面隔離原則 - Interface Segregation Principle 依賴反轉原則 - Dependency Inversion Principle 合成/聚合複用原則 - Composite/Aggregate Reuse Principle 迪米特法則 - Law of Demeter    Creational Patterns  超市與送貨員 - Singleton Pattern 開餐廳 - Factory Pattern 台式餐廳 &amp; 義式餐廳 - Abstract Factory Pattern 組一台電腦 - Builder Pattern Prototype Pattern    Structural Patterns  Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern Flyweight Pattern Proxy Pattern    Behavioural Patterns  Chain of Responsibility Pattern Command Pattern Interpreter Pattern Iterator Pattern Mediator Pattern Memento Pattern Observer Pattern State Pattern Strategy Pattern Template Pattern Visitor Pattern    場外下注區  MVC Pattern Anti-Patterns &amp; Code Smells Design Pattern VS 演算法       定義    Software entities like classes, modules and functions should be open for extension but closed for modifications.</description>
    </item>
    
    <item>
      <title>我的購物車 - 單一職責原則 | Single Responsibility Principle</title>
      <link>https://ianjustin39.github.io/ianlife/design-pattern/single-responsibility-principle/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/design-pattern/single-responsibility-principle/</guid>
      <description>本系列文章同步分享於IT邦幫忙第12屆鐵人賽
   Design Pattern 系列文章導讀    Design Pattern可以說是開發上大家都會遇到的一個課題， 這系列文會從Design Principles、各種design pattern到最後的Anti-Patterns &amp; Code Smells介紹下去，讓我們可以更了解各種pattern的使用時機與場合。 預計目標主題如下，若有哪部分不熟的章節可以直接點進去看 註：可以利用Online Java Compiler IDE來跑範例程式碼。      新手村  什麼是Design Pattern? Design Pattern的類型與原則    Design Principles  我的購物車 - 單一職責原則 | Single Responsibility Principle 支付系統 - 開閉原則 | Open/Closed Principle 里氏替換原則 - Liskov Substitution Principle 介面隔離原則 - Interface Segregation Principle 依賴反轉原則 - Dependency Inversion Principle 合成/聚合複用原則 - Composite/Aggregate Reuse Principle 迪米特法則 - Law of Demeter    Creational Patterns  超市與送貨員 - Singleton Pattern 開餐廳 - Factory Pattern 台式餐廳 &amp; 義式餐廳 - Abstract Factory Pattern 組一台電腦 - Builder Pattern Prototype Pattern    Structural Patterns  Adapter Pattern Bridge Pattern Composite Pattern Decorator Pattern Facade Pattern Flyweight Pattern Proxy Pattern    Behavioural Patterns  Chain of Responsibility Pattern Command Pattern Interpreter Pattern Iterator Pattern Mediator Pattern Memento Pattern Observer Pattern State Pattern Strategy Pattern Template Pattern Visitor Pattern    場外下注區  MVC Pattern Anti-Patterns &amp; Code Smells Design Pattern VS 演算法       定義    There should never be more than one reason for a class to change.</description>
    </item>
    
    <item>
      <title>Design Pattern的類型與原則</title>
      <link>https://ianjustin39.github.io/ianlife/design-pattern/design-patterns-and-principle/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/design-pattern/design-patterns-and-principle/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10235045&#34; target=&#34;_blank&#34;&gt;本系列文章同步分享於IT邦幫忙第12屆鐵人賽&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;</description>
    </item>
    
    <item>
      <title>什麼是Design Pattern?</title>
      <link>https://ianjustin39.github.io/ianlife/design-pattern/what_is_design_pattern/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/design-pattern/what_is_design_pattern/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10234830&#34; target=&#34;_blank&#34;&gt;本系列文章同步分享於IT邦幫忙第12屆鐵人賽&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;自從當上了工程師後，大多數時間都負責後端的程式開發，從最一開始設計api到現在sdk的經驗中，了解到一個好的程式架構及設計，不只可以讓後續維運成本降低，往後要擴充也會相對容易許多。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用Bootstrap &#43; Masonry &#43; magnific Popup架設個人相簿</title>
      <link>https://ianjustin39.github.io/ianlife/build_photograph_in_hugo/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/build_photograph_in_hugo/</guid>
      <description>&lt;p&gt;剛開始架設網站時就決定要在網站內架一個相簿，這篇會分享如何用Bootstrap+Masonry+magnificPopup建構屬於你自己的相片牆&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>部署Hugo個人網頁至GitHub</title>
      <link>https://ianjustin39.github.io/ianlife/deploy_hugo_on_github/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/deploy_hugo_on_github/</guid>
      <description>&lt;p&gt;之前用Hugo架設個人網站，但架設完成後還是需要部署到一個平台，才有辦法瀏覽，
這篇就來分享如何將網頁部署到GitHub以及途中遇到的一些問題&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Hugo建立個人網頁</title>
      <link>https://ianjustin39.github.io/ianlife/get_started_hugo/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ianjustin39.github.io/ianlife/get_started_hugo/</guid>
      <description>&lt;p&gt;一直有想要寫一些文章記錄生活，身為一個工程師，難免會有想要自己架設的靈魂（？，
最近發現hugo可以快速架站，除了有template以外也可以自己更改裡面的配置
，對於一個前端小菜鳥來說，算是一大福音ＸＤ，於是開始了這條漫漫長路～&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>